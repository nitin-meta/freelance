{"ast":null,"code":"import { ColorFactory } from './color';\nexport var customizePrefixCls = 'ant-color-picker';\nexport var generateColor = function generateColor(color) {\n  if (color instanceof ColorFactory) {\n    return color;\n  }\n  return new ColorFactory(color);\n};\nexport var getRoundNumber = function getRoundNumber(value) {\n  return Math.round(Number(value || 0));\n};\nexport var getAlphaColor = function getAlphaColor(color) {\n  return getRoundNumber(color.toHsb().a * 100);\n};","map":{"version":3,"names":["ColorFactory","customizePrefixCls","generateColor","color","getRoundNumber","value","Math","round","Number","getAlphaColor","toHsb","a"],"sources":["D:/freelance/mistu2/fontend/node_modules/antd/es/color-picker/util.js"],"sourcesContent":["import { ColorFactory } from './color';\nexport const customizePrefixCls = 'ant-color-picker';\nexport const generateColor = color => {\n  if (color instanceof ColorFactory) {\n    return color;\n  }\n  return new ColorFactory(color);\n};\nexport const getRoundNumber = value => Math.round(Number(value || 0));\nexport const getAlphaColor = color => getRoundNumber(color.toHsb().a * 100);"],"mappings":"AAAA,SAASA,YAAY,QAAQ,SAAS;AACtC,OAAO,IAAMC,kBAAkB,GAAG,kBAAkB;AACpD,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAGC,KAAK,EAAI;EACpC,IAAIA,KAAK,YAAYH,YAAY,EAAE;IACjC,OAAOG,KAAK;EACd;EACA,OAAO,IAAIH,YAAY,CAACG,KAAK,CAAC;AAChC,CAAC;AACD,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,KAAK;EAAA,OAAIC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACH,KAAK,IAAI,CAAC,CAAC,CAAC;AAAA;AACrE,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAGN,KAAK;EAAA,OAAIC,cAAc,CAACD,KAAK,CAACO,KAAK,CAAC,CAAC,CAACC,CAAC,GAAG,GAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}